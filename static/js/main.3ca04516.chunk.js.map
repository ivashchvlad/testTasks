{"version":3,"sources":["planeicon.svg","s7logo.svg","Ticket.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Ticket","tiket","className","price","src","s7","alt","segments","map","segment","i","key","origin","destination","_date","duration","date","Date","res","getHours","getMinutes","getTime","formatDate","time","rez","Math","floor","toTimeFormat","stops","length","number","join","App","useState","searchId","setSearchId","stopSearch","setStopSearch","tikets","setTikets","filter","setFilter","sort","setSort","useEffect","axios","get","then","data","params","tickets","stop","catch","e","console","log","handleChangeFilter","newFilter","target","name","fill","plane","type","checked","onChange","onClick","a","b","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3ca04516.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/planeicon.0c089234.svg\";","module.exports = __webpack_public_path__ + \"static/media/s7logo.35aae663.svg\";","import React from 'react'\nimport s7 from './s7logo.svg'\nimport './Ticket.css'\n\nexport function Ticket({ tiket }) {\n\n    const suffiks = (number) => {\n        if (number % 10 === 1) return 'ка';\n        if (number>0 && number<5) return 'ки';\n        return 'ок';\n    }\n\n    const toTimeFormat = (time) => {\n        let rez = '';\n        if (Math.floor(time/60)) rez += Math.floor(time/60) + 'ч ';\n        rez += time%60 + 'м';\n        return rez;\n    }\n\n    const formatDate = (_date, duration) => {\n        let date = new Date(_date);\n        let res =  date.getHours() + ':' + date.getMinutes() + '-';\n        date = new Date(date.getTime() + duration*60000);\n        res += date.getHours() + ':' + date.getMinutes();\n        return res;\n    }\n\n    return (\n        <div className='ticket'>\n            <div className='header'>\n                <div className='price'>\n                    {tiket.price} P\n                </div>\n                <div className='logo'>\n                    <img src={s7} className=\"logo-img\" alt=\"logo\" />\n                </div>\n            </div>\n            <div className='body'>\n                {\n                    tiket.segments.map((segment, i) => (\n                        <div className='segment' key={i}>\n                            <div className='details'>\n                                <h1>{segment.origin}-{segment.destination}</h1>\n                                <h2>{formatDate(segment.date, segment.duration)}</h2>\n                            </div>\n                            <div className='details'>\n                                <h1>В пути</h1>\n                                <h2>{toTimeFormat(segment.duration)}</h2>\n                            </div>\n                            <div className='details'>\n                                <h1>{`${segment.stops.length} пересад${suffiks(segment.stops.length)}`}</h1>\n                                <h2>{segment.stops.length ? segment.stops.join(', ') : '--'}</h2>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Ticket\n","import React, { useState, useEffect } from 'react'\nimport plane from './planeicon.svg'\nimport './App.css'\n\nimport axios from 'axios'\n\nimport Ticket from './Ticket'\n\nfunction App() {\n  const [searchId, setSearchId] = useState('');\n  const [stopSearch, setStopSearch] = useState(false);\n  const [tikets, setTikets] = useState([]);\n  const [filter, setFilter] = useState([false, false, false, false, true]);\n  const [sort, setSort] = useState('cheap');\n\n  //Get SearchId On Mount\n  useEffect(() => {\n    axios.get('https://front-test.beta.aviasales.ru/search').then((res) => {\n      setSearchId(res.data.searchId);\n    });\n  }, []);\n\n  //Get Tikets Until they available\n  useEffect(() => {\n    if (!stopSearch) {\n      axios.get('https://front-test.beta.aviasales.ru/tickets', {\n        params: {\n          searchId: searchId,\n        }\n      }).then((res) => {\n        setTikets(tikets => [...tikets, ...res.data.tickets]);\n        setStopSearch(stopSearch => res.data.stop);\n      }).catch(e => { \n        console.log(e);\n        setStopSearch(false);\n      });\n    }\n  }, [searchId, stopSearch]);\n\n\n\n  const handleClickCheap = () => {\n    setSort('cheap');\n  }\n\n  const handleClickFast = () => {\n    setSort('fast');\n  }\n\n  const handleChangeFilter = (e) => {\n    let newFilter = [...filter];\n    switch (e.target.name) {\n      case 'all':\n        if (!newFilter[4]) {\n          newFilter.fill(false, 0);\n          newFilter[4] = true;\n        } else newFilter[4] = false;\n        break;\n      case 'none':\n        if (newFilter[4]) newFilter[4] = false;\n        newFilter[0] = !newFilter[0];\n        break;\n      case 'one':\n        if (newFilter[4]) newFilter[4] = false;\n        newFilter[1] = !newFilter[1];\n        break;\n      case 'two':\n        if (newFilter[4]) newFilter[4] = false;\n        newFilter[2] = !newFilter[2];\n        break;\n      case 'three':\n        if (newFilter[4]) newFilter[4] = false;\n        newFilter[3] = !newFilter[3]\n        break;\n      default: break;\n    }\n    setFilter(newFilter);\n  }\n\n  const sorting = (a, b) => {\n    if (sort === 'cheap') return a.price - b.price;\n    if (sort === 'fast') {\n      return (a.segments[0].duration + a.segments[1].duration) - (b.segments[0].duration + b.segments[1].duration);\n    }\n  }\n\n  const filtering = (tiket) => {\n    if (filter[4]) return true;\n    for (let i = 1; i < filter.length; i++) {\n      if (filter[i] && (tiket.segments[0].stops.length === i && tiket.segments[1].stops.length === i))\n        return true;\n    }\n    return false;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={plane} className=\"App-logo\" alt=\"logo\" />\n      </header>\n      <main className=\"App-main\">\n        <div className=\"peresadki\">\n\n          <h1>Количество пересадок</h1>\n          <div className=\"filters\">\n            <p>\n              <label className=\"checkbox-container\">Все\n                <input type=\"checkbox\"\n                  name=\"all\"\n                  checked={filter[4]}\n                  onChange={handleChangeFilter}\n                />\n                <span className=\"checkmark\"></span>\n              </label>\n            </p>\n            <p>\n              <label className=\"checkbox-container\">Без пересадок\n                <input type=\"checkbox\"\n                  name=\"none\"\n                  checked={filter[0]}\n                  onChange={handleChangeFilter}\n                />\n                <span className=\"checkmark\"></span>\n              </label>\n            </p>\n            <p>\n              <label className=\"checkbox-container\">1 пересадка\n                <input type=\"checkbox\"\n                  name=\"one\"\n                  checked={filter[1]}\n                  onChange={handleChangeFilter}\n                />\n                <span className=\"checkmark\"></span>\n              </label>\n            </p>\n            <p>\n              <label className=\"checkbox-container\">2 пересадки\n                <input type=\"checkbox\"\n                  name=\"two\"\n                  checked={filter[2]}\n                  onChange={handleChangeFilter}\n                />\n                <span className=\"checkmark\"></span>\n              </label>\n            </p>\n            <p>\n              <label className=\"checkbox-container\">3 пересадки\n                <input type=\"checkbox\"\n                  name=\"three\"\n                  checked={filter[3]}\n                  onChange={handleChangeFilter}\n                />\n                <span className=\"checkmark\"></span>\n              </label>\n            </p>\n          </div>\n        </div>\n        <div className=\"content\">\n          <div className='top-buttons'>\n            <button\n              className={'left-button ' + (sort === 'cheap' && 'active-button')}\n              onClick={handleClickCheap}>\n              Самый дешевый\n            </button>\n            <button\n              className={'right-button ' + (sort === 'fast' && 'active-button')}\n              onClick={handleClickFast}>\n              Самый быстрый\n            </button>\n          </div>\n          <div className=\"tickets\">\n            {\n              tikets.length ? tikets.sort(sorting).filter(filtering).map((tiket, i) =>\n                <Ticket tiket={tiket} key={i} />\n              ) : 'Loading...'\n            }\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}